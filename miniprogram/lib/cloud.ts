//~~** This file is auto generated by tools, please DO NOT EDIT it. **~~
import type functionFormat from '@cloud/functions/format'
import type functionSum from '@cloud/functions/sum'
import type functionGetOpenId from '@cloud/functions/getOpenId'

type PromiseType<T> = T extends Promise<infer _> ? T : Promise<T>

type PromiseReturnType<T extends (...args: any) => any> = (...args: Parameters<T>) => PromiseType<ReturnType<T>>

export const cloudFormat: PromiseReturnType<typeof functionFormat> = object => {
  return wx.cloud.callFunction({ name: 'format', data: { object } }).then(res => res.result as any)
}

export const cloudSum: PromiseReturnType<typeof functionSum> = (a, b) => {
  return wx.cloud.callFunction({ name: 'sum', data: { a, b } }).then(res => res.result as any)
}

export const cloudGetOpenId: PromiseReturnType<typeof functionGetOpenId> = () => {
  return wx.cloud.callFunction({ name: 'getOpenId', data: {} }).then(res => res.result as any)
}

export default {
  format: cloudFormat,
  sum: cloudSum,
  getOpenId: cloudGetOpenId
}